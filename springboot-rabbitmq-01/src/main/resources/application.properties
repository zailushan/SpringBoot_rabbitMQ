server.port=9092
server.context-path=/study_mq
#logging
logging.file.path=D:\\logs\\SpringBoot-RabbitMQ
logging.file.name=springboot-rabbitmq-01

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp
multipart.max-request-size=20Mb
multipart.max-file-size=10Mb

logging.level.org.springframework = INFO
logging.level.com.fasterxml.jackson = INFO
logging.level.com.debug.steadyjack = DEBUG

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.datasource.initialize=false
spring.jmx.enabled=false

#\u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/study_rabbitmq?characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=123456

#mybatis
mybatis.config-location=classpath:mybatis-config.xml
mybatis.checkConfigLocation = true
mybatis.mapper-locations=classpath:mappers/*.xml

#rabbitmq
spring.rabbitmq.host=39.105.91.158
spring.rabbitmq.port=5672
spring.rabbitmq.username=jack
spring.rabbitmq.password=123456
spring.rabbitmq.virtual-host=/test

# 配置并发是多消费者
# 这个是什么意思目前也没了解清楚?
spring.rabbitmq.listener.concurrency=10
# 最多有多少个消费者
spring.rabbitmq.listener.max-concurrency=20
# 每个消费者预处理多少个数据
spring.rabbitmq.listener.prefetch=50

# 自定义属性变量
mq.env=local
basic.info.mq.exchange.name=${mq.env}:basic:info:mq:exchange
basic.info.mq.routing.key.name=${mq.env}:basic:info:mq:routing:key
basic.info.mq.queue.name=${mq.env}:basic:info:mq:queue

product.robbing.mq.exchange.name=${mq.env}.product.robbing.mq.exchange.name
product.robbing.mq.routing.key.name=${mq.env}.product.robbing.mq.routing.key.name
product.robbing.mq.queue.name=${mq.env}.product.robbing.mq.queue.name

simple.mq.queue.name=${mq.env}.simple.mq.queue
simple.mq.exchange.name=${mq.env}.simple.mq.exchange
simple.mq.routing.key.name=${mq.env}.simple.mq.routing.key

user.order.queue.name=${mq.env}.user.order.queue
user.order.exchange.name=${mq.env}.user.order.exchange
user.order.routing.key.name=${mq.env}.user.order.routing.key

log.system.queue.name=${mq.env}.log.system.queue
log.system.exchange.name=${mq.env}.log.system.exchange
log.system.routing.key.name=${mq.env}.log.system.routing.key

log.user.queue.name=${mq.env}.log.user.queue
log.user.exchange.name=${mq.env}.log.user.exchange
log.user.routing.key.name=${mq.env}.log.user.routing.key

# 发送邮件的队列和交换机
mail.queue.name=${mq.env}.mail.queue
mail.exchange.name=${mq.env}.mail.exchange
mail.routing.key.name=${mq.env}.mail.routing.key

#邮件配置
spring.boot.mail.properties.host=smtp.qq.com
spring.boot.mail.properties.port=465
spring.boot.mail.properties.userName=1208453455@qq.com
spring.boot.mail.properties.password=nqfjhfodgsatiegb
spring.boot.mail.properties.protocol=smtp
spring.boot.mail.properties.needAuth=true
spring.boot.mail.properties.sslClass=javax.net.ssl.SSLSocketFactory

mail.from=1208453455@qq.com
mail.to=304771277@qq.com
mail.by=linsenzhong@126.com
mail.subject=这是SpringBoot整合Rabbitmq的邮件
mail.content=您好，这是RabbitMQ实战系列第二阶段的内容-用于注册时异步发送邮件进行邮箱验证!

# 死信队列的配置
simple.dead.queue.name=${mq.env}.simple.dead.queue
simple.dead.exchange.name=${mq.env}.simple.dead.exchange
simple.dead.routing.key.name=${mq.env}.simple.dead.routing.key

simple.produce.exchange.name=${mq.env}.simple.produce.exchange
simple.produce.routing.key.name=${mq.env}.simple.produce.routing.key

simple.dead.real.queue.name=${mq.env}.simple.dead.real.queue

# 死信队列(延迟队列)处理超时没有支付的订单
user.order.dead.queue.name=${mq.env}.user.order.dead.queue
user.order.dead.exchange.name=${mq.env}.user.order.dead.exchange
user.order.dead.routing.key.name=${mq.env}.user.order.dead.routing.key

user.order.dead.produce.exchange.name=${mq.env}.user.order.dead.produce.exchange
user.order.dead.produce.routing.key.name=${mq.env}.user.order.dead.produce.routing.key
user.order.dead.real.queue.name=${mq.env}.user.order.dead.real.queue

# 动态设置ttl的死信队列配置
dynamic.dead.queue.name=${mq.env}.dynamic.dead.queue
dynamic.dead.exchange.name=${mq.env}.dynamic.dead.exchange
dynamic.dead.routing.key.name=${mq.env}.dynamic.dead.routing.key

dynamic.dead.produce.exchange.name=${mq.env}.dynamic.dead.produce.exchange
dynamic.dead.produce.routing.key.name=${mq.env}.dynamic.dead.produce.routing.key
dynamic.dead.real.queue.name=${mq.env}.dynamic.dead.real.queue



